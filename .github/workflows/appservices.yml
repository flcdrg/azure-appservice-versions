name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build-bicep:
    name: Build Bicep
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}

      - name: Test
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP }}
          template: ./bicep/main.bicep
          failOnStdErr: false
          deploymentMode: Complete
          additionalArguments: --what-if

      - name: Archive Bicep
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: bicep
          path: "./bicep"

  deploy:
    name: Deploy
    needs:
      - build-bicep
    runs-on: ubuntu-latest
    environment: dev
    if: github.ref == 'refs/heads/main'

    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: bicep
          path: "./bicep"

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}
          enable-AzPSSession: true

      - name: deploy
        uses: azure/arm-deploy@v2
        id: deploy
        with:
          resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP }}
          template: ./bicep/main.bicep
          deploymentMode: Complete
          failOnStdErr: false

      - name: "checkout"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: "Publish apps"
        shell: pwsh
        working-directory: app
        run: |
          $platforms = @('Windows', 'Linux')
          $nodeVersions = @(16, 18, 20)

          foreach ($platform in $platforms) {
            # Remove cached .azure folder between platform changes
            Remove-Item -recurse -force .azure -ErrorAction Ignore

            foreach ($version in $nodeVersions) {

                if ($platform -eq 'Windows') {
                  $runtime = "NODE:${version}LTS"
                } else {
                  $runtime = "NODE:${version}-lts"
                } 
                az webapp up --resource-group "${{ vars.AZURE_RESOURCE_GROUP }}" --name "app-$($platform.ToLower())-node$version-versions-australiaeast" --os-type $platform --runtime "$runtime"
            }
          }

      - name: "Get version"
        shell: pwsh
        run: |
          "| Framework | Actual Version |" >> $Env:GITHUB_STEP_SUMMARY
          "|-------|-----------|" >> $Env:GITHUB_STEP_SUMMARY

          $platforms = @('Windows', 'Linux')

          $nodeVersions = @(16, 18, 20)

          foreach ($platform in $platforms) {
            foreach ($version in $nodeVersions) {

                $response = Invoke-RestMethod -Method Get -Uri "app-$($platform.ToLower())-node$version-versions-australiaeast"

                $actualVersion = $response.Trim()
                Write-Output "$kuduApiBaseUrl $($version): $actualVersion"
                "| $platform Node $version | $actualVersion |" >> $Env:GITHUB_STEP_SUMMARY
            }
          }
